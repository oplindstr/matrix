c
@password
c
@event.event_parameters.first.choice_button_must_have_choices
@event.event_parameters.first
@event.event_parameters
@event
c
@member.save
@member
@user
c
@member
@user
c
@member
@user
c
@user.member = Member.new(update_user_params[:member_attributes])
update_user_params
@user.member = Member.new(update_user_params[:member])
@user.member
@user
c
@user.save
c
@user.save
@user.member
@user
c
update_user_params[:member]
update_user_params
@existing_member
@member
c
@existing_member
@member
c
@member
c
@user.member
@member
c
@user.save
@user
c
@user.member
@user
c
user_params[:member_attributes]
user_params
@user.member
@user
c
user_params
@user.member
@user
c
URI.parse("http://localhost:3000/dokumentit/SELECT+*+FROM+users;+DROP+users--")
URI.parse("http://localhost:3000/dokumentit/SELECT+*+FROM+users+DROP+users--")
URI.parse("http://localhost:3000/dokumentit/SELECT+*+FROM+users;+DROP+users--")
c
@signups.last(2)
@signups.last(1)
@signups.first(3)
@signups
c
@users.select{ |m| m.membership(@year) }.size
@users.select{ |m| m.membership(@year) }
c
@user.save!
@user.save
@user.avatar
@user.avatar = board_member_params[:avatar]
@user.avatar
board_member_params[:avatar]
board_member_params
params[:board_member][:avatar]
params
params[:avatar]
@user.avatar
@user
c
@user.save
@user.avatar
@user.update(add_picture_params)
add_picture_params
@user
c
params[:avatar]
params
@board_member.avatar_url
@board_member.get_avatar
@board_member.avatar
@board_member
c
@board_member
c
@board_member
c
@board_member = BoardMember.find(27)
@board_member
c
@board_member = BoardMember.find(params[:id])
BoardMember.find(params[:id])
c
@board_member
@board_member = BoardMember.find(params[:id])
BoardMember.find("27")
BoardMember.find(27)
BoardMember.all
params[:id]
@board_member
c
@alert.full_messages
@alert.full_messages.values
@alert.full_mess
@alert.full_messages
c
@alert.messages.values
@alert.messages
c
@alert.f
@alert.full_messages
@alert
c
params[:name]
@document_group
c
@event.starttime_date
@event.starttime
c
Time.now
c
DateHelper.time(@event.starttime)
DateHelper.weekday(@event.starttime)
@event.starttime
@event
c
@event.starttime.time
@event.starttime
DateHelper.weekday(@event.starttime)
DateHelper.weekday(@event.starttime) %> <%= DateHelper.standard_date(@event.starttime)
@event.starttime
c
@event.starttime
@event
c
@event
@event.starttime
@event.starttime = @event.starttime.to_s(:db)
@event.starttime
c
@event.starttime.to_s(:db)
Time::DATE_FORMATS
@event.starttime.to_s
@event.starttime.to_s(:nozone)
@event.starttime.to_s
@event.starttime
c
@event.endtime.strftime('%Y.%m.%dT%h.%m')
@event.end.strftime('%Y.%m.%dT%h.%m')
@event.endtime
@event
c
@alert.full_messages
@alert.first[:name]
@alert.first
@alert
c
@position_member
c
@news_count
@event_count
c
params[:users].first[1][:member]
params[:users].first[1].member?
params[:users].first[1].member
params[:users].first[1]
User.find(params[:users].first[0])
params[:users].first[1]
params[:users].first[0]
params[:users].first.id
params[:users].first
params[:users]
params
c
params.permit(:year, :users => [:member])
params.permit(:year, :users_attributes => [:member])
params.permit(:year, :users_attributes)
params.permit(:year, :users)
params
params.permit(:year)
c
params = update_memberships_params
params
c
params
c
params[:year]
params
c
@event.signup_required
c
@event.signup_required
@event
c
@users = @all_board_members.pluck(:user_id)
@all_board_members.pluck(:user_id)
@position_members.pluck(:user_id)
@position_members.select(:user_id)
@position_members
@position_members.slice({:user_id})
@position_members.slice()
@position_members.slice(:user_id)
@position_members
@position_members.values
@position_members.user_id
@position_members
c
@all_board_members.select{|m| m.supplementary == false}
@all_board_members.select(|m| m.supplementary == false)
@all_board_members[:user_id]
@all_board_members
c
@supplementary_members
@board_members
c
!@position_member.errors.empty?
@position_member.errors
@position_member
c
@year
@events = Event.all.order(:starttime).select{|m| m.starttime.year == @year }
@events = Event.all.order(:starttime).select{|m| m.starttime.year == 2018 }
@events = Event.all.order(:starttime)
@events = Event.all
@events
c
@event.event_parameters
@event
c
@signup.signup_parameters
@signup
c
params
c
params
c
event_parameter_params
params
c
event_parameter_params
params
c
admin
