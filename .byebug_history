c
@document_group_category.nil?
@document_group_category
c
@document_group_category.id
@document_group_category
c
open
open = (time >= self.signup_start and time <= self.signup_end)
open
open = time >= self.signup_start and time <= self.signup_end
open
open = nil
open
open = time >= self.signup_start and time <= self.signup_end
open
open = time >= self.signup_start
open = time >= self.signup.start
open
c
event_params["event_parameters_attributes"]["1"]
event_params["event_parameters_attributes"]["0"]
event_params["event_parameters_attributes"][0]
event_params["event_parameters_attributes"]
event_params[event_parameters_attributes]
event_params
c
event_params
byebug
c
event_params
c
@member_ids = @all_board_members.where('member_id is null').pluck(:member_id).uniq
@member_ids = @all_board_members.where('member_id is not null').pluck(:member_id).uniq
@member_ids = @all_board_members.where('not member_id').pluck(:member_id).uniq
@member_ids = @all_board_members.where('member_id').pluck(:member_id).uniq
@member_ids = @all_board_members.where('member_id').uniq
@member_ids = @all_board_members.where(member_id).uniq
@member_ids
c
@member_ids.include? nil
@member_ids
@position_members
c
@position_members
@names
@member_id
@member_ids
@position_members
c
@position_members
@member_ids
@ids
@position_members
c
@position_members
c
@position_members
@names
@member_ids
c
@member_ids
@names
@position_members
c
@position_members
@names
@member_ids
@position_members
c
@position_members
c
@ids
@position_members
c
@position_members
c
@position_members.select("MIN(id) as id").group(:member_id,:name).collect(&:id)
@position_members.select("MIN(id) as id").group(:member_id,:name)
@position_members.select("MIN(id) as id").group(:member_id,:name).collect(&:id)
@position_members
c
@position_members
@position_members.map{ |p| p.name }.uniq
@position_members.map{ |p| p.name }
@position_members.uniq
@position_members[0].name
@position_members
@position_members.name
@position_members[:name]
@position_members
c
@position_members
c
@supplementary_members
@position_members
@board_members
c
self.positions_by_year(2018)
c
@password
c
@event.event_parameters.first.choice_button_must_have_choices
@event.event_parameters.first
@event.event_parameters
@event
c
@member.save
@member
@user
c
@member
@user
c
@member
@user
c
@user.member = Member.new(update_user_params[:member_attributes])
update_user_params
@user.member = Member.new(update_user_params[:member])
@user.member
@user
c
@user.save
c
@user.save
@user.member
@user
c
update_user_params[:member]
update_user_params
@existing_member
@member
c
@existing_member
@member
c
@member
c
@user.member
@member
c
@user.save
@user
c
@user.member
@user
c
user_params[:member_attributes]
user_params
@user.member
@user
c
user_params
@user.member
@user
c
URI.parse("http://localhost:3000/dokumentit/SELECT+*+FROM+users;+DROP+users--")
URI.parse("http://localhost:3000/dokumentit/SELECT+*+FROM+users+DROP+users--")
URI.parse("http://localhost:3000/dokumentit/SELECT+*+FROM+users;+DROP+users--")
c
@signups.last(2)
@signups.last(1)
@signups.first(3)
@signups
c
@users.select{ |m| m.membership(@year) }.size
@users.select{ |m| m.membership(@year) }
c
@user.save!
@user.save
@user.avatar
@user.avatar = board_member_params[:avatar]
@user.avatar
board_member_params[:avatar]
board_member_params
params[:board_member][:avatar]
params
params[:avatar]
@user.avatar
@user
c
@user.save
@user.avatar
@user.update(add_picture_params)
add_picture_params
@user
c
params[:avatar]
params
@board_member.avatar_url
@board_member.get_avatar
@board_member.avatar
@board_member
c
@board_member
c
@board_member
c
@board_member = BoardMember.find(27)
@board_member
c
@board_member = BoardMember.find(params[:id])
BoardMember.find(params[:id])
c
@board_member
@board_member = BoardMember.find(params[:id])
BoardMember.find("27")
BoardMember.find(27)
BoardMember.all
params[:id]
@board_member
c
@alert.full_messages
@alert.full_messages.values
@alert.full_mess
@alert.full_messages
c
@alert.messages.values
@alert.messages
c
@alert.f
@alert.full_messages
@alert
c
params[:name]
@document_group
c
@event.starttime_date
@event.starttime
c
Time.now
c
DateHelper.time(@event.starttime)
DateHelper.weekday(@event.starttime)
@event.starttime
@event
c
@event.starttime.time
@event.starttime
DateHelper.weekday(@event.starttime)
DateHelper.weekday(@event.starttime) %> <%= DateHelper.standard_date(@event.starttime)
@event.starttime
c
@event.starttime
@event
c
@event
@event.starttime
@event.starttime = @event.starttime.to_s(:db)
@event.starttime
c
@event.starttime.to_s(:db)
Time::DATE_FORMATS
@event.starttime.to_s
@event.starttime.to_s(:nozone)
